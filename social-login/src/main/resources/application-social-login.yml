# logging
#logging:
#  level:
#    org.springframework.security: DEBUG

# apple
apple:
  client-id: ${APPLE_CLIENT_ID}

# google
google:
  client-id: ${GOOGLE_CLIENT_ID}

# token
token:
  secret: ${TOKEN_SECRET}
  # time to live
  ttl:
#    access-token: 10000 # 10 seconds
    access-token: 300000 # 300 seconds(5 minutes)
#    refresh-token: 30000 # 30 seconds
    refresh-token: 864000000 # 864000 seconds(10 days)

spring:
  # spring-security config
  # Using generated security password: 1841f2d5-365e-4dd5-8a98-d25eed1cfbc8
  # This generated password is for development use only. Your security configuration must be updated before running your application in production.
  #
  # The above warning is a warning that spring security has not configured the user.
  security:
    user:
      name: hello
      password: hello
  # mysql config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/study
    username: study
    password: 1234
    # hikaricp
    # The default value of mysql wait_timeout is 28800 (8 hours).
    # If it is burdensome to set wait_timeout directly in mysql, set it as a session in properties.
    hikari:
      connection-init-sql: set wait_timeout = 610
      max-lifetime: 600000
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
    # As traffic increases, connections become scarce.
    open-in-view: false
  data:
    # redis
    redis:
      host: 127.0.0.1
      port: 6379
      password: 1234
      repositories:
        # Implemented through redisTemplate and redisRepository is not used.
        enabled: false
